################################################################################
# Build Configuration
################################################################################

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

################################################################################
# Project Configuration
################################################################################

[project]
name = "xunit"
description = "A working example of the xUnit testing tool described in Kent Beck's \"Test-Driven Development by Example\"."
authors = [
    { name = "Moritz E. Beber", email = "midnighter@posteo.net" }
]
maintainers = [
    { name = "Moritz E. Beber", email = "midnighter@posteo.net" }
]
license = "Unlicense"
readme = {"file" = "README.md", "content-type" = "text/markdown"}
requires-python = ">=3.10"
# Please consult https://pypi.org/classifiers/ for a full list.
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: The Unlicense (Unlicense)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education :: Testing",
    "Typing :: Typed",
]
keywords = [
    "test-driven development",
    "TDD",
    "testing",
    "xUnit",
    "Kent Beck",
]
dynamic = ["version"]
dependencies = []

[project.urls]
Homepage = "https://github.com/Midnighter/xunit"
"Source Code" = "https://github.com/Midnighter/xunit"
"Bug Tracker" = "https://github.com/Midnighter/xunit/issues"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest-watcher",
]

################################################################################
# Tool Configuration
################################################################################

[tool.hatch.build]
only-packages = true

[tool.hatch.build.targets.wheel]
packages = ["src/xunit"]

[tool.hatch.build.hooks.vcs]
version-file = "src/xunit/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.black]
line-length = 88
target-version = ["py310"]
extend-exclude = '''
(
    _version.py
)
'''

[tool.coverage.paths]
source = [
    "src/xunit",
    "*/site-packages/xunit"
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]
precision = 2

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D107",  # 'Missing docstring in __init__' ignored because pydoclint wants us to document the class instead.
    "D203",  # '1 blank line required before class docstring' ignored because we want no blank line.
    "D212",  # 'Multi-line docstring summary should start at the first line' ignored because we want the summary to start on the second line.
    "D407",  # 'Missing dashed underline after section' ignored because Google style docstrings don't underline.
    "ANN002",  # 'Missing type annotation for {*args} in method'.
    "ANN003",  # 'Missing type annotation for {*kwargs} in method'.
    "ANN101",  # 'Missing type annotation for {self} in method'.
    "ANN102",  # 'Missing type annotation for {cls} in classmethod'.
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "E401",  # 'Multiple imports on one line'
    "E402",  # 'Module level import not at top of file'
    "F401",  # 'Imported but unused'
    "I001",  # 'Import block is un-sorted or un-formatted' ignored because we may have to import in a particular, not-alphabetical order.
]
"tests/**/*.py" = [
    "S101",  # 'Use of assert detected' ignored because we are using pytest.
    "INP001",  # 'Insecure input' ignored because we are testing.
    "ANN201",  # 'Missing type annotation for {return}' ignored because all tests return `None`.
]

[tool.ruff.lint.isort]
case-sensitive = true
known-first-party = ["xunit"]
lines-after-imports = 2

[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = false
check-yield-types = false
